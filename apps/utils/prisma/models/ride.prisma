model RideTask {
  id               String         @id @default(cuid())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  status           RideTaskStatus
  driver           User           @relation(name: "RideTaskDriver", fields: [driverId], references: [id])
  driverId         String
  passenger        User           @relation(name: "RideTaskPassenger", fields: [passengerId], references: [id])
  passengerId      String
  rideStartOtpHash String
  rideEndOtpHash   String?
  rideExpires      DateTime   @default(dbgenerated("CURRENT_TIMESTAMP + INTERVAL '1 day'")) @db.Timestamp(6)
  from             String
  to               String
}

model Vehicle {
  id           String @id @default(cuid())
  make         String // e.g., "Toyota"
  model        String // e.g., "Camry"
  licensePlate String @unique
  color        String
  capacity     Int

  driver   User   @relation(fields: [driverId], references: [id])
  driverId String @unique
}

enum RideTaskStatus {
  REGISTERED
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
  EXPIRED
}